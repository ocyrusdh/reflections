How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It made it a lot easier to find the error.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If there was ever an issue with some new code, we could quickly role back to
    a previous woking version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The pro is that you can control the creation of versions of your code at logical 
    states.
    The con is that you must remember to commit your changes or they won't be saved.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git was designed for coding and in some languages you often have to modify
    multiple files in order for your code to work therefore it would makes sense to 
    commit all those files together. 

How can you use the commands git log and git diff to view the history of files?

    You use git log to list the history of commits, then you use git diff to see the
    specific changes between two commits.

How might using version control make you more confident to make changes that
could break something?

    It will give me the security that I can go back and compare to a previous version
    if my current version introduced a bug.

Now that you have your workspace set up, what do you want to try using Git for?

    Version control of my code... testing append